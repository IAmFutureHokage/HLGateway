// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/add-control-value": {
            "post": {
                "description": "Add a new control value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistic"
                ],
                "summary": "Add control value",
                "parameters": [
                    {
                        "description": "Add Control Value Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddControlValueRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AddControlValueResponse"
                        }
                    }
                }
            }
        },
        "/api/add-post": {
            "post": {
                "description": "Add a new post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PostsService"
                ],
                "summary": "Add post",
                "parameters": [
                    {
                        "description": "Add Post Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PostResponse"
                        }
                    }
                }
            }
        },
        "/api/add-telegram": {
            "post": {
                "description": "Add a new telegram",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buffer"
                ],
                "summary": "Add telegram",
                "parameters": [
                    {
                        "description": "Add Telegram Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddTelegramRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AddTelegramResponse"
                        }
                    }
                }
            }
        },
        "/api/add-user": {
            "post": {
                "description": "Add a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UsersService"
                ],
                "summary": "Add user",
                "parameters": [
                    {
                        "description": "Add User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    }
                }
            }
        },
        "/api/check-water-level": {
            "get": {
                "description": "Check Water Level",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistic"
                ],
                "summary": "Check Water Level",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PostCode",
                        "name": "postcode",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "date",
                        "name": "date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "WaterLevel",
                        "name": "value",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CheckWaterLevelResponse"
                        }
                    }
                }
            }
        },
        "/api/delete-post": {
            "delete": {
                "description": "Delete the post by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PostsService"
                ],
                "summary": "Delete the post",
                "parameters": [
                    {
                        "description": "Delete Post Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DeletePostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PostResponse"
                        }
                    }
                }
            }
        },
        "/api/delete-user": {
            "delete": {
                "description": "Delete the user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UsersService"
                ],
                "summary": "Delete the user",
                "parameters": [
                    {
                        "description": "Delete User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    }
                }
            }
        },
        "/api/find-posts": {
            "get": {
                "description": "Find posts by serchstring",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PostsService"
                ],
                "summary": "Find posts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Substring",
                        "name": "substring",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PostsResponse"
                        }
                    }
                }
            }
        },
        "/api/get-all-posts": {
            "get": {
                "description": "Get all posts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PostsService"
                ],
                "summary": "Get all posts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PostsResponse"
                        }
                    }
                }
            }
        },
        "/api/get-control-values": {
            "get": {
                "description": "Get slice of control value with pages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistic"
                ],
                "summary": "Get control value",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PostCode",
                        "name": "postcode",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Type of control value",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetControlValuesResponse"
                        }
                    }
                }
            }
        },
        "/api/get-post": {
            "get": {
                "description": "Get the post by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PostsService"
                ],
                "summary": "Get the post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PostResponse"
                        }
                    }
                }
            }
        },
        "/api/get-posts": {
            "get": {
                "description": "Get posts by page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PostsService"
                ],
                "summary": "Gets posts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetPostsPageResponse"
                        }
                    }
                }
            }
        },
        "/api/get-stats": {
            "get": {
                "description": "Get stats by day in time interval (for graph)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistic"
                ],
                "summary": "Get stats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PostCode",
                        "name": "postcode",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "startdate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "enddate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Graph Points",
                        "name": "graphpoints",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetStatsResponse"
                        }
                    }
                }
            }
        },
        "/api/get-telegram": {
            "get": {
                "description": "Get Telegram by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buffer"
                ],
                "summary": "Get Telegram",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetTelegramResponse"
                        }
                    }
                }
            }
        },
        "/api/get-telegrams": {
            "get": {
                "description": "Get all Telegrams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buffer"
                ],
                "summary": "Get Telegrams",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetTelegramsResponse"
                        }
                    }
                }
            }
        },
        "/api/get-user": {
            "get": {
                "description": "Get the user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UsersService"
                ],
                "summary": "Get the user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    }
                }
            }
        },
        "/api/get-users": {
            "get": {
                "description": "Get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UsersService"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UsersResponse"
                        }
                    }
                }
            }
        },
        "/api/remove-control-value": {
            "delete": {
                "description": "Remove a control value by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistic"
                ],
                "summary": "Remove control value",
                "parameters": [
                    {
                        "description": "Remove Control Value Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RemoveControlValueRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RemoveControlValueResponse"
                        }
                    }
                }
            }
        },
        "/api/remove-telegrams": {
            "delete": {
                "description": "Remove existing telegrams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buffer"
                ],
                "summary": "Remove telegrams",
                "parameters": [
                    {
                        "description": "Remove Telegrams Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RemoveTelegramsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RemoveTelegramsResponse"
                        }
                    }
                }
            }
        },
        "/api/transfer-to-system": {
            "get": {
                "description": "Transfer To System",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buffer"
                ],
                "summary": "Transfer To System",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TransferToSystemResponse"
                        }
                    }
                }
            }
        },
        "/api/update-control-value": {
            "put": {
                "description": "Update control value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistic"
                ],
                "summary": "Update control value",
                "parameters": [
                    {
                        "description": "Update Control Value Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateControlValueRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateControlValueResponse"
                        }
                    }
                }
            }
        },
        "/api/update-post": {
            "put": {
                "description": "Update the post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PostsService"
                ],
                "summary": "Update the post",
                "parameters": [
                    {
                        "description": "Update Post Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PostResponse"
                        }
                    }
                }
            }
        },
        "/api/update-telegram-by-code": {
            "put": {
                "description": "Update info about telegram By Code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buffer"
                ],
                "summary": "Update Telegram By Code",
                "parameters": [
                    {
                        "description": "Update Telegram By Code Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateTelegramByCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateTelegramByCodeResponse"
                        }
                    }
                }
            }
        },
        "/api/update-telegram-by-info": {
            "put": {
                "description": "Update info about telegram By Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buffer"
                ],
                "summary": "Update Telegram By Info",
                "parameters": [
                    {
                        "description": "Update Telegram By Info Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateTelegramByInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateTelegramByInfoResponse"
                        }
                    }
                }
            }
        },
        "/api/update-user": {
            "put": {
                "description": "Update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UsersService"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "Update User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AddControlValueRequest": {
            "type": "object",
            "properties": {
                "date_start": {
                    "type": "string"
                },
                "post_code": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/dto.ControlValueType"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "dto.AddControlValueResponse": {
            "type": "object",
            "properties": {
                "control_value": {
                    "$ref": "#/definitions/dto.ControlValue"
                }
            }
        },
        "dto.AddTelegramRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "dto.AddTelegramResponse": {
            "type": "object",
            "properties": {
                "telegrams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Telegram"
                    }
                }
            }
        },
        "dto.CheckWaterLevelResponse": {
            "type": "object",
            "properties": {
                "excess": {
                    "type": "integer"
                }
            }
        },
        "dto.ControlValue": {
            "type": "object",
            "properties": {
                "date_start": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "post_code": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/dto.ControlValueType"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "dto.ControlValueType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "None",
                "Norm",
                "Floodplain",
                "Adverse",
                "Dangerous"
            ]
        },
        "dto.DeletePostRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.GetControlValuesResponse": {
            "type": "object",
            "properties": {
                "control_values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ControlValue"
                    }
                },
                "max_page": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "dto.GetPostsPageResponse": {
            "type": "object",
            "properties": {
                "max_page_number": {
                    "type": "integer"
                },
                "page_number": {
                    "type": "integer"
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Post"
                    }
                }
            }
        },
        "dto.GetStatsResponse": {
            "type": "object",
            "properties": {
                "start_interval": {
                    "type": "string"
                },
                "stats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.StatsDay"
                    }
                }
            }
        },
        "dto.GetTelegramResponse": {
            "type": "object",
            "properties": {
                "telegram": {
                    "$ref": "#/definitions/dto.Telegram"
                }
            }
        },
        "dto.GetTelegramsResponse": {
            "type": "object",
            "properties": {
                "telegrams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Telegram"
                    }
                }
            }
        },
        "dto.IcePhenomenia": {
            "type": "object",
            "properties": {
                "intensity": {
                    "type": "integer"
                },
                "phenomen": {
                    "type": "integer"
                }
            }
        },
        "dto.Post": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "river": {
                    "type": "string"
                }
            }
        },
        "dto.PostRequest": {
            "type": "object",
            "properties": {
                "post": {
                    "$ref": "#/definitions/dto.Post"
                }
            }
        },
        "dto.PostResponse": {
            "type": "object",
            "properties": {
                "post": {
                    "$ref": "#/definitions/dto.Post"
                }
            }
        },
        "dto.PostsResponse": {
            "type": "object",
            "properties": {
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Post"
                    }
                }
            }
        },
        "dto.RemoveControlValueRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.RemoveControlValueResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.RemoveTelegramsRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.RemoveTelegramsResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.StatsDay": {
            "type": "object",
            "properties": {
                "adverse": {
                    "type": "integer"
                },
                "dangerous": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "floodplain": {
                    "type": "integer"
                },
                "norm": {
                    "type": "integer"
                },
                "waterLevel": {
                    "type": "integer"
                }
            }
        },
        "dto.Telegram": {
            "type": "object",
            "properties": {
                "air_temperature": {
                    "type": "integer"
                },
                "average_reservoir_level": {
                    "type": "integer"
                },
                "datetime": {
                    "type": "string"
                },
                "delta_water_level": {
                    "type": "integer"
                },
                "downstream_level": {
                    "type": "integer"
                },
                "group_id": {
                    "type": "string"
                },
                "headwater_level": {
                    "type": "integer"
                },
                "ice_height": {
                    "type": "integer"
                },
                "ice_phenomenia_state": {
                    "type": "integer"
                },
                "ice_phenomenias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.IcePhenomenia"
                    }
                },
                "id": {
                    "type": "string"
                },
                "inflow": {
                    "type": "number"
                },
                "is_dangerous": {
                    "type": "boolean"
                },
                "post_code": {
                    "type": "string"
                },
                "precipitation_duration": {
                    "type": "integer"
                },
                "precipitation_value": {
                    "type": "number"
                },
                "reservoir_date": {
                    "type": "string"
                },
                "reservoir_volume": {
                    "type": "number"
                },
                "reservoir_water_inflow_date": {
                    "type": "string"
                },
                "reset": {
                    "type": "number"
                },
                "snow_height": {
                    "type": "integer"
                },
                "telegram_code": {
                    "type": "string"
                },
                "water_flow": {
                    "type": "number"
                },
                "water_level_on20h": {
                    "type": "integer"
                },
                "water_level_on_time": {
                    "type": "integer"
                },
                "water_temperature": {
                    "type": "number"
                }
            }
        },
        "dto.TransferToSystemResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.UpdateControlValueRequest": {
            "type": "object",
            "properties": {
                "control_values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ControlValue"
                    }
                }
            }
        },
        "dto.UpdateControlValueResponse": {
            "type": "object",
            "properties": {
                "control_values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ControlValue"
                    }
                }
            }
        },
        "dto.UpdateTelegramByCodeRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "telegram_code": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateTelegramByCodeResponse": {
            "type": "object",
            "properties": {
                "telegram": {
                    "$ref": "#/definitions/dto.Telegram"
                }
            }
        },
        "dto.UpdateTelegramByInfoRequest": {
            "type": "object",
            "properties": {
                "telegram": {
                    "$ref": "#/definitions/dto.Telegram"
                }
            }
        },
        "dto.UpdateTelegramByInfoResponse": {
            "type": "object",
            "properties": {
                "telegram": {
                    "$ref": "#/definitions/dto.Telegram"
                }
            }
        },
        "dto.User": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "post_code": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "dto.UserIDRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.UserRequest": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/dto.User"
                }
            }
        },
        "dto.UserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/dto.User"
                }
            }
        },
        "dto.UsersResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.User"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "HLGateway API",
	Description:      "This is the HLGateway server API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
